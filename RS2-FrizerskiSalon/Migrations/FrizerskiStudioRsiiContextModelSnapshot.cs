// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS2_FrizerskiSalon.Database;

#nullable disable

namespace RS2_FrizerskiSalon.Migrations
{
    [DbContext(typeof(FrizerskiStudioRsiiContext))]
    partial class FrizerskiStudioRsiiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Bosnian_Latin_100_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Izvjestaj", b =>
                {
                    b.Property<int>("IzvjestajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IzvjestajId"));

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<string>("Detalji")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("IzvjestajId");

                    b.HasIndex(new[] { "UposlenikId" }, "IX_Izvjestaj_UposlenikId");

                    b.ToTable("Izvjestaj", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KlijentId"));

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LozinkaHash")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LozinkaSalt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SpolId")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KlijentId");

                    b.HasIndex(new[] { "SpolId" }, "IX_Klijent_SpolId");

                    b.ToTable("Klijent", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NarudzbaId"));

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<bool?>("IsIsporucena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPlacena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("KlijentId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UkupniIznos")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("NarudzbaId");

                    b.HasIndex(new[] { "KlijentId" }, "IX_Narudzba_KlijentId");

                    b.ToTable("Narudzba", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Obavijest", b =>
                {
                    b.Property<int>("ObavijestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObavijestId"));

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<string>("Naslov")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sadrzaj")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("ObavijestId");

                    b.HasIndex(new[] { "UposlenikId" }, "IX_Obavijest_UposlenikId");

                    b.ToTable("Obavijest", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Portfolio", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioId"));

                    b.Property<string>("Opis")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("PortfolioId");

                    b.HasIndex(new[] { "UposlenikId" }, "fk_uposlenik_portfolio")
                        .IsUnique()
                        .HasFilter("([UposlenikId] IS NOT NULL)");

                    b.ToTable("Portfolio", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Proizvod", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProizvodId"));

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Opis")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("TipProizvodaId")
                        .HasColumnType("int");

                    b.HasKey("ProizvodId");

                    b.HasIndex(new[] { "TipProizvodaId" }, "IX_Proizvod_TipProizvodaId");

                    b.ToTable("Proizvod", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Spol", b =>
                {
                    b.Property<int>("SpolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpolId"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("SpolId");

                    b.ToTable("Spol", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.StavkeNarudzbe", b =>
                {
                    b.Property<int>("StavkeNarudzbeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkeNarudzbeId"));

                    b.Property<int?>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodId")
                        .HasColumnType("int");

                    b.HasKey("StavkeNarudzbeId");

                    b.HasIndex(new[] { "NarudzbaId" }, "IX_StavkeNarudzbe_NarudzbaId");

                    b.HasIndex(new[] { "ProizvodId" }, "IX_StavkeNarudzbe_ProizvodId");

                    b.ToTable("StavkeNarudzbe", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.StavkePortfolium", b =>
                {
                    b.Property<int>("StavkaPortfoliaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkaPortfoliaId"));

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<string>("Opis")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("StavkaPortfoliaId")
                        .HasName("pk_stavkaportfoliaid");

                    b.HasIndex(new[] { "PortfolioId" }, "IX_StavkePortfolia_PortfolioId");

                    b.ToTable("StavkePortfolia");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"));

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("date");

                    b.Property<bool?>("IsOdobren")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsOtkazan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsPlacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("KlijentId")
                        .HasColumnType("int");

                    b.Property<string>("Komentar")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Opis")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TipTerminaId")
                        .HasColumnType("int");

                    b.Property<int?>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("TerminId");

                    b.HasIndex(new[] { "KlijentId" }, "IX_Termin_KlijentId");

                    b.HasIndex(new[] { "TipTerminaId" }, "IX_Termin_TipTerminaId");

                    b.HasIndex(new[] { "UposlenikId" }, "IX_Termin_UposlenikId");

                    b.ToTable("Termin", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.TipProizvodum", b =>
                {
                    b.Property<int>("TipProizvodaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipProizvodaId"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipProizvodaId")
                        .HasName("pk_tipproizovda");

                    b.ToTable("TipProizvoda");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.TipTermina", b =>
                {
                    b.Property<int>("TipTerminaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipTerminaId"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TipTerminaId");

                    b.ToTable("TipTermina", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Uposlenik", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UposlenikId"));

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LozinkaHash")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LozinkaSalt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SpolId")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ZanimanjeId")
                        .HasColumnType("int");

                    b.HasKey("UposlenikId");

                    b.HasIndex(new[] { "SpolId" }, "IX_Uposlenik_SpolId");

                    b.HasIndex(new[] { "ZanimanjeId" }, "IX_Uposlenik_ZanimanjeId");

                    b.ToTable("Uposlenik", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Zanimanje", b =>
                {
                    b.Property<int>("ZanimanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZanimanjeId"));

                    b.Property<string>("Naziv")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("ZanimanjeId");

                    b.ToTable("Zanimanje", (string)null);
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Izvjestaj", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Uposlenik", "Uposlenik")
                        .WithMany("Izvjestajs")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("fk_izvjestaj_uposlenik");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Klijent", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Spol", "Spol")
                        .WithMany("Klijents")
                        .HasForeignKey("SpolId")
                        .HasConstraintName("fk_klijent_spol");

                    b.Navigation("Spol");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Narudzba", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Klijent", "Klijent")
                        .WithMany("Narudzbas")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("fk_narudzba_klijent");

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Obavijest", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Uposlenik", "Uposlenik")
                        .WithMany("Obavijests")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("fk_obavijest_uposlenik");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Portfolio", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Uposlenik", "Uposlenik")
                        .WithOne("Portfolio")
                        .HasForeignKey("RS2_FrizerskiSalon.Database.Portfolio", "UposlenikId")
                        .HasConstraintName("FK__Portfolio__Uposl__44FF419A");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Proizvod", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.TipProizvodum", "TipProizvoda")
                        .WithMany("Proizvods")
                        .HasForeignKey("TipProizvodaId")
                        .HasConstraintName("fk_proizvod_tip");

                    b.Navigation("TipProizvoda");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.StavkeNarudzbe", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Narudzba", "Narudzba")
                        .WithMany("StavkeNarudzbes")
                        .HasForeignKey("NarudzbaId")
                        .HasConstraintName("fk_narudzbaproizvod");

                    b.HasOne("RS2_FrizerskiSalon.Database.Proizvod", "Proizvod")
                        .WithMany("StavkeNarudzbes")
                        .HasForeignKey("ProizvodId")
                        .HasConstraintName("fk_narudzba_proizvod");

                    b.Navigation("Narudzba");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.StavkePortfolium", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Portfolio", "Portfolio")
                        .WithMany("StavkePortfolia")
                        .HasForeignKey("PortfolioId")
                        .HasConstraintName("fk_stavka_portfolio");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Termin", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Klijent", "Klijent")
                        .WithMany("Termins")
                        .HasForeignKey("KlijentId")
                        .HasConstraintName("fk_klijent_termin");

                    b.HasOne("RS2_FrizerskiSalon.Database.TipTermina", "TipTermina")
                        .WithMany("Termins")
                        .HasForeignKey("TipTerminaId")
                        .HasConstraintName("fk_termin_tip");

                    b.HasOne("RS2_FrizerskiSalon.Database.Uposlenik", "Uposlenik")
                        .WithMany("Termins")
                        .HasForeignKey("UposlenikId")
                        .HasConstraintName("fk_uposlenik_termin");

                    b.Navigation("Klijent");

                    b.Navigation("TipTermina");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Uposlenik", b =>
                {
                    b.HasOne("RS2_FrizerskiSalon.Database.Spol", "Spol")
                        .WithMany("Uposleniks")
                        .HasForeignKey("SpolId")
                        .HasConstraintName("fk_uposlenik_spol");

                    b.HasOne("RS2_FrizerskiSalon.Database.Zanimanje", "Zanimanje")
                        .WithMany("Uposleniks")
                        .HasForeignKey("ZanimanjeId")
                        .HasConstraintName("fk_uposlenik_zanimanje");

                    b.Navigation("Spol");

                    b.Navigation("Zanimanje");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Klijent", b =>
                {
                    b.Navigation("Narudzbas");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Narudzba", b =>
                {
                    b.Navigation("StavkeNarudzbes");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Portfolio", b =>
                {
                    b.Navigation("StavkePortfolia");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Proizvod", b =>
                {
                    b.Navigation("StavkeNarudzbes");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Spol", b =>
                {
                    b.Navigation("Klijents");

                    b.Navigation("Uposleniks");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.TipProizvodum", b =>
                {
                    b.Navigation("Proizvods");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.TipTermina", b =>
                {
                    b.Navigation("Termins");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Uposlenik", b =>
                {
                    b.Navigation("Izvjestajs");

                    b.Navigation("Obavijests");

                    b.Navigation("Portfolio");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("RS2_FrizerskiSalon.Database.Zanimanje", b =>
                {
                    b.Navigation("Uposleniks");
                });
#pragma warning restore 612, 618
        }
    }
}
